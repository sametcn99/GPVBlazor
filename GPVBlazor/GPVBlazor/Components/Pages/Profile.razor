@page "/p/{username}"
@rendermode InteractiveServer
@using GPVBlazor.Models
@using GPVBlazor.Components.Displays
@using GPVBlazor.Services.Interfaces
@inject IUserService UserService
@inject IContactService ContactService
@inject HttpClient Http

<PageTitle>@Username 's Profile</PageTitle>

@if (user != null)
{
    <UserProfileDisplay UserProfile="@user" />
}
else
{
    <div class="spinner-border" />
}

@if (stats != null && repositories != null)
{
    <UserStatisticsDisplay UserStats="@stats" Repositories="@repositories" user="@user" />
}
else
{
    <div class="spinner-border" />
}

@if (repositories?.Count > 0)
{
    <div>
        <h3 class="mb-4">Repositories</h3>
        <div class="row">
            @foreach (var repo in repositories)
            {
                <RepositoryDisplay repository="@repo" />
            }
        </div>
    </div>
}
else
{
    <div class="spinner-border" />
}


@code {
    [Parameter]
    public string? Username { get; set; }
    private User? user;
    private List<Repository>? repositories = new List<Repository>();
    RepositoryStats? stats;

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(Username))
        {
            user = await UserService.FetchUserProfile(Username);
            repositories = await UserService.FetchUserRepositories(Username);

            if (repositories?.Count > 0)
            {
                stats = new RepositoryStats(repositories);
            }
        }
    }
}
