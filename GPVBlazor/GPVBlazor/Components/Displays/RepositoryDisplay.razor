@using GPVBlazor.Models

@if (repository is not null)
{
    <div class="box h-100" style="min-height: 300px;">
        <div>
            <div class="is-flex is-align-items-center is-flex-wrap-wrap" style="gap: 0.5rem;">
                <h5 class="title is-5">@repository.Name</h5>
                <h6 class="subtitle is-6 has-text-grey">@((repository.Archived) ? "Archived" : "")</h6>
            </div>
            <h6 class="subtitle is-6 mb-2 has-text-grey">@repository.Language</h6>
            <div class="is-flex is-flex-direction-row is-flex-wrap-wrap" style="gap: 0.5rem;">
                @if (repository.Homepage != "")
                {
                    <a href="@repository.Homepage" class="button is-small is-link is-inverted">Homepage</a>
                }
                <a href="@repository.HtmlUrl" class="button is-small is-link is-inverted">GitHub</a>
                <a href="@repository.CloneUrl" class="button is-small is-link is-inverted">Clone URL</a>
                <button class="button is-small is-link is-inverted is-column-gap-1">
                    @repository.StargazersCount
                    <span class="icon">
                        <i class="fas fa-star"></i>
                    </span>
                </button>
                @if (repository?.Readme?.Content is not null)
                {
                    <button class="button is-small is-link is-inverted" @onclick="() => ShowModal = true">Readme</button>
                    <ReadmeModal ShowModal="ShowModal" readme="repository?.Readme" />
                }
            </div>
            <p class="pt-2">@repository?.Description</p>
        </div>
        <footer class="is-flex is-flex-direction-column">
            <small class="has-text-grey">Created At: @repository?.CreatedAt</small>
            <small class="has-text-grey">Last Pushed: @repository?.PushedAt</small>
        </footer>
    </div>
}

@code {
    [Parameter]
    public Repository? repository { get; set; }
    private bool ShowModal = false;

    private void showModal()
    {
        ShowModal = true;
    }
}
