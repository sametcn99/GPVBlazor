@using GPVBlazor.Models

@if (repository is not null)
{
    <div class="box is-flex is-flex-direction-column is-justify-content-space-between" style="height: 100%">
        <div>
            <p class="title">@Title</p>
            <div>
                <p class="title is-5 py-0 my-0">
                    @repository.Name

                </p>
                <h6 class="title is-6 is-flex is-flex-wrap-wrap is-column-gap-1 my-0">
                    <span class="subtitle is-6 has-text-grey">@repository.Language</span>
                    <span class="subtitle is-6 has-text-grey">@((repository.Archived) ? "Archived" : "")</span>
                    <span class="subtitle is-6 has-text-grey">@((repository.IsTemplate) ? "Template" : "")</span>
                    <span class="subtitle is-6 has-text-grey">@((repository.Fork) ? "Forked" : "")</span>
                </h6>
            </div>
            <div class="is-flex is-flex-direction-row is-flex-wrap-wrap is-column-gap-1 is-row-gap-1">
                @if (!string.IsNullOrEmpty(repository.Homepage) && Uri.IsWellFormedUriString(repository.Homepage, UriKind.Absolute))
                {
                    <a href="@repository.Homepage" class="button is-small is-link is-inverted" target="_blank">Homepage</a>
                }
                <a href="@repository.HtmlUrl" class="button is-small is-link is-inverted" target="_blank">GitHub</a>
                <a href="@repository.CloneUrl" class="button is-small is-link is-inverted" target="_blank">Clone URL</a>
                <button class="button is-small is-link is-inverted is-column-gap-1">
                    @repository.StargazersCount
                    <span class="icon">
                        <i class="fas fa-star"></i>
                    </span>
                </button>
                @if (repository?.Readme?.Content is not null)
                {
                    <button class="button is-small is-link is-inverted" @onclick="() => ShowModal = true">Readme</button>
                    <ReadmeModal ShowModal="ShowModal" readme="repository?.Readme" />
                }
            </div>
            <p class="pt-2 truncate">@repository?.Description</p>
        </div>
        <footer class="is-flex is-flex-direction-column">
            <small class="has-text-grey">Created At: @repository?.CreatedAt</small>
            <small class="has-text-grey mb-3">Last Pushed: @repository?.PushedAt</small>
            @if (repository?.Topics != null)
            {
                <div class="is-flex is-flex-wrap-wrap">
                    @foreach (var topic in repository.Topics)
                    {
                        <div class="column is-narrow p-1">
                            <small class="tag is-dark">@topic</small>
                        </div>
                    }
                </div>
            }
        </footer>
    </div>
}

@code {
    [Parameter]
    public Repository? repository { get; set; }

    [Parameter]
    public String Title { get; set; } = "";

    private bool ShowModal = false;
    private void showModal() { ShowModal = true; }
}