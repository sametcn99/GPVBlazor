@using GPVBlazor.Models

@if (repository is not null)
{
    <div class="box is-flex is-flex-direction-column is-justify-content-space-between" style="height: 100%">
        <div>
           @if(!string.IsNullOrEmpty(Title))
            {
                <p class="title is-5 has-text-primary mb-3">@Title</p>
            }
            <div class="mb-3">
                <h4 class="title is-4 mb-2">
                    @repository.Name
                </h4>
                <div class="tags">
                    @if (!string.IsNullOrEmpty(repository.Language))
                    {
                        <span class="tag is-primary">
                            <span class="icon">
                                <i class="fas fa-code"></i>
                            </span>
                            <span>@repository.Language</span>
                        </span>
                    }
                    @if (repository.Archived)
                    {
                        <span class="tag is-warning">
                            <span class="icon">
                                <i class="fas fa-archive"></i>
                            </span>
                            <span>Archived</span>
                        </span>
                    }
                    @if (repository.IsTemplate)
                    {
                        <span class="tag is-info">
                            <span class="icon">
                                <i class="fas fa-copy"></i>
                            </span>
                            <span>Template</span>
                        </span>
                    }
                    @if (repository.Fork)
                    {
                        <span class="tag is-link">
                            <span class="icon">
                                <i class="fas fa-code-branch"></i>
                            </span>
                            <span>Forked</span>
                        </span>
                    }
                </div>
            </div>
            <div class="buttons are-small mb-3">
                @if (!string.IsNullOrEmpty(repository.Homepage) && Uri.IsWellFormedUriString(repository.Homepage, UriKind.Absolute))
                {
                    <a href="@repository.Homepage" class="button is-link is-light is-rounded" target="_blank">
                        <span class="icon">
                            <i class="fas fa-home"></i>
                        </span>
                        <span>Homepage</span>
                    </a>
                }
                <a href="@repository.HtmlUrl" class="button is-primary is-light is-rounded" target="_blank">
                    <span class="icon">
                        <i class="fab fa-github"></i>
                    </span>
                    <span>GitHub</span>
                </a>
                <a href="@repository.CloneUrl" class="button is-info is-light is-rounded" target="_blank">
                    <span class="icon">
                        <i class="fas fa-download"></i>
                    </span>
                    <span>Clone</span>
                </a>
                <span class="button is-warning is-light is-rounded">
                    <span class="icon">
                        <i class="fas fa-star"></i>
                    </span>
                    <span>@repository.StargazersCount</span>
                </span>
                @if (repository?.Readme?.Content is not null)
                {
                    <button class="button is-success is-light is-rounded" @onclick="() => ShowModal = true">
                        <span class="icon">
                            <i class="fas fa-book"></i>
                        </span>
                        <span>Readme</span>
                    </button>
                    <ReadmeModal ShowModal="ShowModal" readme="repository?.Readme" />
                }
            </div>
            @if (!string.IsNullOrEmpty(repository?.Description))
            {
                <p class="has-text-grey truncate">@repository.Description</p>
            }
        </div>
        <footer class="mt-3">
            <div class="level is-mobile">
                <div class="level-left">
                    <div class="level-item">
                        <small class="has-text-grey">
                            <span class="icon is-small">
                                <i class="fas fa-calendar-plus"></i>
                            </span>
                            @(repository?.CreatedAt?.ToString("MMM dd, yyyy") ?? "N/A")
                        </small>
                    </div>
                </div>
                <div class="level-right">
                    <div class="level-item">
                        <small class="has-text-grey">
                            <span class="icon is-small">
                                <i class="fas fa-sync"></i>
                            </span>
                            @(repository?.PushedAt?.ToString("MMM dd, yyyy") ?? "N/A")
                        </small>
                    </div>
                </div>
            </div>
            @if (repository?.Topics != null && repository.Topics.Any())
            {
                <div class="tags are-small mt-2">
                    @foreach (var topic in repository.Topics.Take(5))
                    {
                        <span class="tag is-dark">
                            <span class="icon is-small">
                                <i class="fas fa-hashtag"></i>
                            </span>
                            <span>@topic</span>
                        </span>
                    }
                    @if (repository.Topics.Count > 5)
                    {
                        <span class="tag">+@(repository.Topics.Count - 5)</span>
                    }
                </div>
            }        </footer>
    </div>
}

@code {
    [Parameter]
    public Repository? repository { get; set; }

    [Parameter]
    public String Title { get; set; } = "";

    private bool ShowModal = false;
    private void showModal() { ShowModal = true; }
}