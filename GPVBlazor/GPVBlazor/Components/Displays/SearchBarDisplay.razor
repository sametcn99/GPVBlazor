@rendermode InteractiveServer
@using GPVBlazor.Models
@inject Services.Interfaces.IUserService UserService

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Write user name..." @bind="inputValue" @bind:event="oninput" @onkeydown="HandleKeyPress">
    <button class="btn btn-outline-secondary" type="button" @onclick="SearchHandle">Search User</button>
</div>

<div class="search-results" style="@(showResults ? "display: block;" : "display: none;")">
    <div>
        @if (data?.Items != null)
        {
            <Virtualize Items="@data.Items" Context="item">
                <a class="search-item d-flex gap-2 text-decoration-none py-1" href="/p/@item.Login">
                    <img src="@item.AvatarUrl" alt="@item.Login" style="height: 60px; width: 60px;" class="rounded-circle img-thumbnail" />
                    <div class="d-flex flex-column gap-1 ">
                        <span class="fs-4 fw-bold">@item.Login</span>
                        <span>@item.Type</span>
                    </div>
                </a>
            </Virtualize>
        }
    </div>
</div>

@code {
    private string inputValue = string.Empty;
    private UserSearchResult? data;
    private string selectedFilter = "All";
    private bool showResults = false;

    private async Task FetchData()
    {
        if (string.IsNullOrWhiteSpace(inputValue))
        {
            data?.Items.Clear();
            return;
        }
        if (inputValue is not null)
        {
            data = await UserService.SearchUsers(inputValue);
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchHandle(); // Added await
        }
    }

    private async Task SearchHandle()
    {
        showResults = true;
        await FetchData();
    }

}